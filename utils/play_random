import numpy as np
from board import print_board, check_triplets
from Q_player import update_q_table, sel_e_greedy_action

Q1 = {}

def action_r(turn, positions, epsilon):
    while True:
        if turn == 1:
            action = sel_e_greedy_action(Q1, positions, epsilon)
        if turn == 2:
            action = 
        if positions[action-1] == 0:
            return action
        else:
            print('spot already taken! please, choose a different spot on the board')
            continue
        
def play_r(turn):
    positions = np.zeros(9)
    p1_win, p2_win, p_tie, p_tot = 0, 0, 0, 0
    epsilon1 = 0.5

    while True:
        print_board(positions)
        if turn == 1:
            action = action_r(turn, positions)
            positions[action-1] = 1
            turn = 2
            if check_triplets(positions) == True:
                print_board(positions)
                print('player1 wins!')
                positions = [0, 0, 0, 0, 0, 0, 0, 0, 0]
                break
            if check_triplets(positions) == 'Tie':
                print_board(positions)
                print('Tie!')
                positions = [0, 0, 0, 0, 0, 0, 0, 0, 0]
                break
        if turn == 2:
            action = action_r(turn, positions)
            positions[action-1] = 2
            turn = 1
            if check_triplets(positions) == True:
                print_board(positions)
                print('player2 wins!')
                positions = [0, 0, 0, 0, 0, 0, 0, 0, 0]
                break
            if check_triplets(positions) == 'Tie':
                print('Tie!')
                positions = [0, 0, 0, 0, 0, 0, 0, 0, 0]
                break